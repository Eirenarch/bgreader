# EditorConfig is awesome:http://EditorConfig.org

# top-most EditorConfig file
root = true

# Don't use tabs for indentation.
[*]
indent_style = space
# (Please don't specify an indent_size here; that has too many unintended consequences.)

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4

# Xml project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 4

# Xml config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

[*.md]
max_line_length = off
trim_trailing_whitespace = false

# JS files
[*.{json,js,ts}]
indent_size = 2
charset = utf-8
insert_final_newline = true
trim_trailing_whitespace = true

[*.ts]
quote_type = single

# Dotnet code style settings:
[*.{cs,vb}]
spelling_checkable_types = identifiers,comments
# Sort using and Import directives with System.* appearing first
dotnet_sort_system_directives_first = true:suggestion
# Avoid "this." and "Me." if not necessary
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Use language keywords instead for data and framework type names for static members
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = false:warning

# Suggest more modern language features when available
dotnet_style_object_initializer = true:none
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:none #this is good but unfortunately it does not honor the preference for not using throw expressions so I turn it off
dotnet_style_null_propagation = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:none #this is annoying when only one name can be inferred

#async methods must end in Async
#! override this in the controllers folder for MVC projects to avoid naming actions with async
dotnet_naming_rule.async_methods_must_end_in_async.symbols = async_methods
dotnet_naming_symbols.async_methods.applicable_kinds = method
dotnet_naming_symbols.async_methods.applicable_accessibilities = *
dotnet_naming_symbols.async_methods.required_modifiers = async
dotnet_naming_rule.async_methods_must_end_in_async.style = async_methods_style
dotnet_naming_style.async_methods_style.required_suffix = Async
dotnet_naming_style.async_methods_style.capitalization = pascal_case
dotnet_naming_rule.async_methods_must_end_in_async.severity = warning

#Use PascalCase for public members
dotnet_naming_rule.public_members_must_be_pascal_case.symbols = public_symbols
dotnet_naming_symbols.public_symbols.applicable_kinds = property,method,event,field
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public
dotnet_naming_rule.public_members_must_be_pascal_case.style = pascal_case_style
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
dotnet_naming_rule.public_members_must_be_pascal_case.severity = warning

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.applicable_accessibilities = *
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_style_prefer_is_null_check_over_reference_equality_method= true:warning
dotnet_style_allow_multiple_blank_lines_experimental=true:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental=true:suggestion
dotnet_style_parentheses_in_arithmetic_binary_operators=never_if_unnecessary:silent
dotnet_style_parentheses_in_other_binary_operators=never_if_unnecessary:silent
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
end_of_line = crlf
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:silent
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_collection_expression = when_types_exactly_match:silent
dotnet_style_namespace_match_folder = true:suggestion


# CSharp code style settings:
[*.cs]
# variable declaration
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = false:warning
csharp_style_var_elsewhere = false:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning

# Prefer method-like constructs to have a block body
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = false:suggestion

# Prefer property-like constructs to have a block body
csharp_style_expression_bodied_properties = false:suggestion
csharp_style_expression_bodied_indexers = false:suggestion
csharp_style_expression_bodied_accessors = false:suggestion

# Suggest more modern language features when available
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check =true:warning
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = false:none
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_prefer_primary_constructors = false:warning

# Newline settings
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true:warning
csharp_new_line_before_catch = true:warning
csharp_new_line_before_finally = true:warning
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true

# IDE0054: Use compound assignment
dotnet_diagnostic.IDE0054.severity = none

# Namespace settings
csharp_using_directive_placement = inside_namespace:warning
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_allow_blank_lines_between_consecutive_braces_experimental=true:suggestion
csharp_indent_labels = one_less_than_current
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion